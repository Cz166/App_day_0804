<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1533388294521" stop="1533388353747">
  <name>test_use_case_I_want_to_sell</name>
  <labels/>
  <test-cases>
    <test-case start="1533388294521" status="failed" stop="1533388353747">
      <name>Test_Login.test_I_sell_register</name>
      <failure>
        <message>WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: Failed to execute touch event
</message>
        <stack-trace>self = &lt;test_use_case_I_want_to_sell.Test_Login object at 0x03A10D90&gt;

    @pytest.mark.run(order=1)
    @allure.step(title='测试用例_001_无前置条件_初始化App_点击我要卖_正确帐号登录')
    def test_I_sell_register(self):
&gt;       self.Dv.succeed_sell()

test_use_case_I_want_to_sell.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\联想\AppData\Local\Programs\Python\Python36-32\lib\site-packages\allure\common.py:62: in impl
    return func(*a, **kw)
..\Page\operation_method.py:87: in succeed_sell
    self.below_slide()
C:\Users\联想\AppData\Local\Programs\Python\Python36-32\lib\site-packages\allure\common.py:62: in impl
    return func(*a, **kw)
..\Page\operation_method.py:37: in below_slide
    TouchAction(self.driver).press(x=504, y=691).move_to(x=481, y=1672).release().perform()
C:\Users\联想\AppData\Local\Programs\Python\Python36-32\lib\site-packages\appium\webdriver\common\touch_action.py:94: in perform
    self._driver.execute(Command.TOUCH_ACTION, params)
C:\Users\联想\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\remote\webdriver.py:236: in execute
    self.error_handler.check_response(response)
C:\Users\联想\AppData\Local\Programs\Python\Python36-32\lib\site-packages\appium\webdriver\errorhandler.py:29: in check_response
    raise wde
C:\Users\联想\AppData\Local\Programs\Python\Python36-32\lib\site-packages\appium\webdriver\errorhandler.py:24: in check_response
    super(MobileErrorHandler, self).check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;appium.webdriver.errorhandler.MobileErrorHandler object at 0x039F5D70&gt;
response = {'status': 500, 'value': '{"status":13,"value":{"message":"An unknown server-side error occurred while processing the command. Original error: Failed to execute touch event"},"sessionId":"f98b126a-d3f8-4377-a096-5765ec7d2dbb"}'}

    def check_response(self, response):
        """
            Checks that a JSON response from the WebDriver does not have an error.
    
            :Args:
             - response - The JSON response from the WebDriver server as a dictionary
               object.
    
            :Raises: If the response contains an error message.
            """
        status = response.get('status', None)
        if status is None or status == ErrorCode.SUCCESS:
            return
    
        value = None
        message = response.get("message", "")
        screen = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    status = value.get('error', None)
                    if status is None:
                        status = value["status"]
                        message = value["value"]
                        if not isinstance(message, basestring):
                            value = message
                            try:
                                message = message['message']
                            except TypeError:
                                message = None
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = WebDriverException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = WebDriverException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        else:
            exception_class = WebDriverException
        if value == '' or value is None:
            value = response['value']
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        if 'stackTrace' in value and value['stackTrace']:
            stacktrace = []
            try:
                for frame in value['stackTrace']:
                    line = self._value_or_default(frame, 'lineNumber', '')
                    file = self._value_or_default(frame, 'fileName', '&lt;anonymous&gt;')
                    if line:
                        file = "%s:%s" % (file, line)
                    meth = self._value_or_default(frame, 'methodName', '&lt;anonymous&gt;')
                    if 'className' in frame:
                        meth = "%s.%s" % (frame['className'], meth)
                    msg = "    at %s (%s)"
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException and 'alert' in value:
            raise exception_class(message, screen, stacktrace, value['alert'].get('text'))
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: Failed to execute touch event

C:\Users\联想\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\remote\errorhandler.py:192: WebDriverException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="940-MainThread"/>
        <label name="host" value="DESKTOP-2H2UE1B"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps>
        <step start="1533388321165" status="failed" stop="1533388353331">
          <name>测试用例_001_无前置条件_初始化App_点击我要卖_正确帐号登录</name>
          <title>测试用例_001_无前置条件_初始化App_点击我要卖_正确帐号登录</title>
          <attachments/>
          <steps>
            <step start="1533388321165" status="failed" stop="1533388353331">
              <name>输入正确帐号、密码，成功登录</name>
              <title>输入正确帐号、密码，成功登录</title>
              <attachments>
                <attachment source="d873be40-df64-471f-bbdb-e5b90f0c4bb7-attachment.txt" title="描述" type="text/plain"/>
                <attachment source="d8edc389-f195-4651-b586-f750772259fc-attachment.txt" title="描述" type="text/plain"/>
              </attachments>
              <steps>
                <step start="1533388321165" status="passed" stop="1533388321255">
                  <name>向右滑动</name>
                  <title>向右滑动</title>
                  <attachments/>
                  <steps/>
                </step>
                <step start="1533388321255" status="passed" stop="1533388321325">
                  <name>向右滑动</name>
                  <title>向右滑动</title>
                  <attachments/>
                  <steps/>
                </step>
                <step start="1533388321325" status="passed" stop="1533388321375">
                  <name>向右滑动</name>
                  <title>向右滑动</title>
                  <attachments/>
                  <steps/>
                </step>
                <step start="1533388321375" status="passed" stop="1533388322524">
                  <name>点击启动页面_教程_进入爱优品按钮</name>
                  <title>点击启动页面_教程_进入爱优品按钮</title>
                  <attachments/>
                  <steps/>
                </step>
                <step start="1533388322524" status="passed" stop="1533388329091">
                  <name>点击始终允许</name>
                  <title>点击始终允许</title>
                  <attachments/>
                  <steps/>
                </step>
                <step start="1533388329091" status="passed" stop="1533388329843">
                  <name>点击我要卖按钮</name>
                  <title>点击我要卖按钮</title>
                  <attachments/>
                  <steps/>
                </step>
                <step start="1533388352251" status="passed" stop="1533388353212">
                  <name>点击登录按钮</name>
                  <title>点击登录按钮</title>
                  <attachments/>
                  <steps/>
                </step>
                <step start="1533388353213" status="failed" stop="1533388353331">
                  <name>向下滑动</name>
                  <title>向下滑动</title>
                  <attachments/>
                  <steps/>
                </step>
              </steps>
            </step>
          </steps>
        </step>
      </steps>
    </test-case>
  </test-cases>
</ns0:test-suite>
